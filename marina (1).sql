CREATE TABLE T_RHSTU_PACIENTE (
    ID_PACIENTE INT CONSTRAINT PK_ID_PACIENTE PRIMARY KEY,
    NM_PACIENTE VARCHAR(100) NOT NULL,
    NR_CPF NUMBER(11) CONSTRAINT UK_CPF_PACIENTE UNIQUE,
    NR_RG VARCHAR(15) CONSTRAINT UK_RG_PACIENTE UNIQUE,
    DT_NASCIMENTO DATE NOT NULL,
    FL_SEXO CHAR (1) CONSTRAINT CK_SEXO CHECK(FL_SEXO IN('F', 'M', 'I')) NOT NULL,
    DS_ESCOLARIDADE VARCHAR(40) NOT NULL,
    DS_ESTADO_CIVIL VARCHAR(25) NOT NULL,
    TIP_GRUPO_SANGUINEO VARCHAR(6) NOT NULL,
    NR_ALTURA NUMBER(3, 2) NOT NULL,
    NR_PESO NUMBER (4, 1) NOT NULL,
    ID_AUTENTICA INT NOT NULL
);

CREATE TABLE T_RHSTU_TELEFONE_PACIENTE (
    ID_PACIENTE NUMBER(9),
    ID_TELEFONE NUMBER(9),
    NR_DDI NUMBER (3) CONSTRAINT NN_NR_DDI NOT NULL,
    DR_DDD NUMBER (3) CONSTRAINT NN_DR_DDD NOT NULL,
    NR_TELEFONE NUMBER (10) CONSTRAINT NN_NR_TELEFONE NOT NULL,
    TP_TELEFONE VARCHAR(20) CONSTRAINT NN_TP_TELEFONE NOT NULL,
    ST_TELEFONE CHAR(1) CONSTRAINT CK_ST_TELEFONE CHECK(ST_TELEFONE IN('A', 'I')) NOT NULL,
    CONSTRAINT PK_TELEFONE PRIMARY KEY (ID_PACIENTE, ID_TELEFONE)
     
);

CREATE TABLE T_RHSTU_EMAIL_PACIENTE (
    ID_EMAIL NUMBER (9) CONSTRAINT PK_ID_EMAIL PRIMARY KEY,
    ID_PACIENTE NUMBER(9) CONSTRAINT FK_ID_PACIENTE_EMAIL REFERENCES T_RHSTU_PACIENTE(ID_PACIENTE),
    DS_EMAIL VARCHAR(100) CONSTRAINT NN_DS_EMAIL NOT NULL,
    TP_EMAIL VARCHAR(20) CONSTRAINT NN_TP_EMAIL NOT NULL,
    ST_EMAIL CHAR(1) CONSTRAINT CK_ST_EMAIL CHECK(ST_EMAIL IN ('A', 'I')) NOT NULL
);

CREATE TABLE T_RHSTU_FORMA_PAGAMENTO (
    ID_FORMA_PAGAMENTO NUMBER CONSTRAINT PK_FORMA_PAGAMENTO PRIMARY KEY,
    VL_TOTAL NUMBER NOT NULL,
    ST_FORMA_PAGAMENTO CHAR (1) CONSTRAINT CK_ST_FORMA_PAGTO CHECK(ST_FORMA_PAGAMENTO IN('T', 'F')) NOT NULL,
    ID_CONSULTA NUMBER NOT NULL
);

CREATE TABLE T_RHSTU_FORMA_CONVENIO (
    ID_FORMA_CONVENIO NUMBER(9) CONSTRAINT PK_FORMA_CONVENIO PRIMARY KEY,
    NR_CARTEIRA NUMBER(10),
    NR_TRANSACAO NUMBER(10),
    DT_TRANSACAO DATE,
    DT_VENCIMENTO DATE,
    ID_FORMA_PAGAMENTO NUMBER(9) CONSTRAINT FK_ID_FORMA_PAGAMENTO REFERENCES T_RHSTU_FORMA_PAGAMENTO(ID_FORMA_PAGAMENTO)
);

CREATE TABLE T_RHSTU_FORMA_PIX (
    ID_FORMA_PIX NUMBER(9) CONSTRAINT PK_ID_FORMA_PIX PRIMARY KEY,
    NR_TRANSACAO NUMBER(10),
    DT_TRANSACAO DATE,
    TP_CHAVE VARCHAR(60),
    ID_FORMA_PAGAMENTO NUMBER(9) CONSTRAINT FK_ID_FORMA_PAGTO_PIX REFERENCES T_RHSTU_FORMA_PAGAMENTO(ID_FORMA_PAGAMENTO)
);

CREATE TABLE T_RHSTU_FORMA_CARTAO(
    ID_FORMA_CARTAO NUMBER(9) CONSTRAINT PK_ID_FORMA_CARTAO PRIMARY KEY,
    NR_CARTAO NUMBER (38),
    NR_TRANSACAO NUMBER (10),
    DT_TRANSACAO DATE,
    TP_BANDEIRA VARCHAR (60),
    DT_VENCIMENTO DATE,
    ID_FORMA_PAGAMENTO1 NUMBER
    
);

CREATE TABLE T_RHSTU_CONSULTA (
    ID_CONSULTA INT CONSTRAINT PK_ID_CONSULTA PRIMARY KEY,
    DT_HR_CONSTULTA DATE CONSTRAINT NN_DT_HR_CONSULTA NOT NULL,
    TP_UNIDADE VARCHAR (255) CONSTRAINT NN_TP_UNIDADE NOT NULL,
    TP_MODALIDADE VARCHAR (255),
    ID_PACIENTE NUMBER(9) CONSTRAINT FK_ID_PACIENTE_CONSULTA REFERENCES T_RHSTU_PACIENTE(ID_PACIENTE),
    ID_UNIDADE_HOSPITALAR NUMBER (9) CONSTRAINT FK_UNIDADE_HOSP_CONSULTA REFERENCES T_RHSTU_UNID_HOSPITALAR (ID_UNID_HOSPITALAR),
    TEL_CENTRAL VARCHAR (14)
    
);

CREATE TABLE T_RHSTU_UNID_HOSPITALAR (
    ID_UNID_HOSPITALAR NUMBER(9) CONSTRAINT PK_RHSTU_UNI_HOSP_END PRIMARY KEY,
    RAZAO_SOCIAL VARCHAR(80) NOT NULL,
    NR_LOGRADOURO NUMBER(7),
    DS_COMPLEMENTO_NUMERO VARCHAR(30),
    DS_PONTO_REFERENCIA VARCHAR(50),
    DT_CADASTRO DATE NOT NULL,
    ST_UNID_HOSPITALAR VARCHAR (10)
);

CREATE TABLE T_RHSTU_PLANO_SAUDE (
    ID_PLANO_SAUDE NUMBER(5) CONSTRAINT PK_ID_PLANO_SAUDE PRIMARY KEY,
    DS_RAZAO_SOCIAL VARCHAR (70) CONSTRAINT NN_RAZAO_SOCIAL NOT NULL,
    NM_FANTASIA_PLANO_SAUDE VARCHAR (80),
    DS_PLANO_SAUDE VARCHAR(100) CONSTRAINT NN_DS_PLANO_SAUDE NOT NULL,
    NR_CNPJ NUMERIC(14) CONSTRAINT NN_NR_CNPJ NOT NULL,
    NM_CONTATO VARCHAR(30),
    DS_TELEFONE VARCHAR(30),
    DT_INICIO DATE CONSTRAINT NN_DT_INICIO_PLANO_SAUDE NOT NULL,
    DT_FIM DATE
);

CREATE TABLE T_RHSTU_PACIENTE_PLANO_SAUDE (
    ID_PACIENTE_PS NUMBER(10),
    ID_PACIENTE NUMBER(9) CONSTRAINT FK_PACIENTE_PS REFERENCES T_RHSTU_PACIENTE(ID_PACIENTE),
    ID_PLANO_SAUDE NUMBER(5) CONSTRAINT FK_PS_PACIENTE REFERENCES T_RHSTU_PLANO_SAUDE(ID_PLANO_SAUDE),
    NR_CARTEIRA_PS NUMBER (15),
    DT_INICIO DATE CONSTRAINT NN_DT_INICIO NOT NULL,
    DT_FIM DATE,
    CONSTRAINT ID_PLANO_SAUDE PRIMARY KEY (ID_PACIENTE, ID_PLANO_SAUDE)
);

CREATE TABLE T_RHSTU_ENDERECO_PACIENTE (
    ID_ENDERECO NUMBER(9) CONSTRAINT PK_ID_ENDERECO PRIMARY KEY,
    ID_PACIENTE NUMBER(9) CONSTRAINT PK_RHSTU_ENDERECO_PACIENTE REFERENCES T_RHSTU_PACIENTE(ID_PACIENTE),
    NR_LOGRADOURO NUMBER(7),
    DS_COMPLEMENTO_NUMERO VARCHAR(30),
    DS_PONTO_REFERENCIA VARCHAR(50),
    DT_INICIO DATE CONSTRAINT NN_DT_INICIO_ENDERECO NOT NULL,
    DT_FIM_ENDERECO DATE
    
);

CREATE TABLE T_RHSTU_TIPO_CONTATO (
    ID_TIPO_CONTATO NUMBER(5) CONSTRAINT PK_RHSTU_TIPO_CONTATO PRIMARY KEY,
    NM_TIPO_CONTATO VARCHAR (8) NOT NULL, 
    DT_INICIO DATE NOT NULL,
    DT_FIM DATE
);

CREATE TABLE T_RHSTU_CONTATO_PACIENTE (
    ID_CONTATO NUMBER(9),
    ID_PACIENTE NUMBER(9),
    ID_TIPO_CONTATO NUMBER(5) CONSTRAINT FK_ID_PACIENTE_TIPO_CONTATO REFERENCES T_RHSTU_TIPO_CONTATO(ID_TIPO_CONTATO),
    NM_CONTATO VARCHAR(40) NOT NULL,
    NR_DDI NUMBER(3),
    DR_DDD NUMBER(3),
    NR_TELEFONE NUMBER(10),
    CONSTRAINT PK_ID_PACIENTE_CONTATO PRIMARY KEY(ID_PACIENTE, ID_CONTATO)
);

CREATE TABLE T_RHSTU_AUTENTICA(
    ID_AUTENTICA NUMERIC,
    LOGIN VARCHAR(60),
    SENHA VARCHAR(60),
    STATUS CHAR(1) CHECK (STATUS IN('T', 'F')),
    CONSTRAINT PK_AUTENTICA PRIMARY KEY (ID_AUTENTICA)
);

CREATE TABLE T_RHSTU_FUNCIONARIO (
    ID_FUNCIONARIO INT CONSTRAINT PK_ID_FUNCIONARIO PRIMARY KEY,
    ID_AUTENTICA INT CONSTRAINT FK_ID_AUTENTICA_FUNCIONARIO REFERENCES T_RHSTU_AUTENTICA(ID_AUTENTICA),
    NM_FUNCIONARIO VARCHAR (255),
    FL_SEXO_FUNC CHAR(1) CHECK (FL_SEXO_FUNC IN('F', 'M', 'I')),
    DS_ESCOLARIDADE VARCHAR(40),
    DT_NASCIMENTO DATE
);









